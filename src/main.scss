$tblSpace: 0.5em;
$tblBkgr: rgba(204, 204, 204, 0.93); /* #ccce; */
$tblText: black;
$boxBow: 6px;
$boxBlur: 0;
$boxLine: 4px;
$cyan: #0cc;
$blue: #69f;
$violet: #a5f;
$red: #c00;
$green: #0b0;
$textRed: #b00;
$textGreen: #080;

$smallCellWidth: 5.333em;
$cellSpace: 0.333em;
$meanCellWidth: (2 * $smallCellWidth) + $cellSpace;
$bigCellWidth: (3 * $smallCellWidth) + (2 * $cellSpace);
$tbdMinWidth: $bigCellWidth + $cellSpace;
$tbdMaxWidth: 7 * ($smallCellWidth + $cellSpace);

/*
Exact target-image overlay
left, top, width, height will be set inline
*/
deltaeoverlay {
    box-shadow: inset 0 0 $boxBlur $boxLine $violet;
}

/*
Chart projection
left, top, width, height will be set inline
*/
deltaechart {
    box-shadow: inset 0 0 $boxBlur $boxLine $blue;
}

/*
Patch projection
left, top, width, height will be set inline
*/
deltaepatch {
    box-shadow: inset 0 0 $boxBlur $boxLine $cyan;
}

deltaeoverlay,
deltaechart,
deltaepatch {
    position: absolute;
    border-radius: $boxBow;
    &.valid {
        box-shadow: inset 0 0 $boxBlur $boxLine $green;
    }
    &.invalid {
        box-shadow: inset 0 0 $boxBlur $boxLine $red;
    }
}

/*
Mousetrailing display for
left, top, right, bottom will be set inline
*/
.picturae-deltaemap-display {
    font: caption;
    position: fixed;
    background: $tblBkgr;
    border-radius: 0 0 $tblSpace $tblSpace;
    color: $tblText;
    padding: $tblSpace;
    margin: 0;
    max-width: 42vw;

    caption {
        background: $tblBkgr;
        border-radius: $tblSpace $tblSpace 0 0;
        padding: $tblSpace;
        font-size: 16px;
        font-weight: bold;
        &:after {
            content: '';
            display: block;
            position: relative;
            top: $tblSpace;
        }
    }
    &.valid caption:after {
        border-bottom: $boxLine solid $green;
    }
    &.invalid caption:after {
        border-bottom: $boxLine solid $red;
    }

    tbody:before {
        content: attr(data-name);
        display: block;
        font: small-caption;
        font-size: inherit;
    }

    th,
    td {
        font-size: inherit;
        vertical-align: top;
    }
}

/* voorbeeld tabel
tabel: 391.50 px * 631.46 px = 241.344,09  px2
flex3: 410.25 px * 616.46 px = 252.902,715 px2
flex4: 546.50 px * 533.96 px = 291.809,14  px2
*/

.picturae-deltaemap-display {
    font-size: 14px;
    tbody {
        padding-top: 1.5em;
        display: flex;
        flex-wrap: wrap;
        min-width: $tbdMinWidth;
        max-width: $tbdMaxWidth;
        &:before {
            position: absolute;
            margin-top: -1.333em;
            width: 100%;
        }
    }
    tr {
        margin: 0 $cellSpace 0 0;
        width: $smallCellWidth;
    }
    tr.r,
    tr.g,
    tr.b,
    tr.lum,
    tr.lab,
    tr.color-profile,
    tr.invalid-patch,
    tr.has-invalid-patch {
        width: $meanCellWidth;
    }
    tr.color-accuracy,
    tr.spatial-accuracy,
    tr.message {
        width: $bigCellWidth;
    }
    tr.spatial-frequency-response {
        width: 100%;
        th {
            font-size: 0;
            color: transparent;
        }
        td {
            text-align: center;
        }
        svg {
        }
    }
    tr > * {
        display: block;
    }
    // exclusions
    tr.rgb,
    tr.valid {
        display: none;
    }
    &.valid {
        .deltaemap-validity {
            display: none;
        }
    }
    &.deltaemap-chart {
        .deltaemap-observed {
            // only contains ppi
            display: none;
        }
    }
}

/*
Inline color display
background will be set inline
*/
deltaecolor {
    display: inline-block;
    box-shadow: 2px 2px 1px 0 #3339;
    width: 1.2em;
    height: 1.2em;
    vertical-align: bottom;
}

/*
Inline boolean display
color set according to boolean state
*/
deltaeboolean {
    display: inline-block;
    font-weight: bold;
    &.valid:before {
        content: '\2713';
        color: $textGreen;
    }
    &.invalid:before {
        content: '\2717';
        color: $textRed;
    }
}
