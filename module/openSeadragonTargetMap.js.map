{"version":3,"file":"openSeadragonTargetMap.js","sources":["../src/functions.js","../src/targetPatch.js","../src/targetChart.js","../src/displayTable.js","../src/targetMap.js","../src/index.js"],"sourcesContent":["/**\n * Test for values with which calculations can be done\n * @private\n * @param {arguments} anonymus - one or more values to test\n * @returns {boolean} is a useable number\n */\nconst isUsableNumber = function() {\n    let isUsable = Boolean(arguments.length)\n    Array.from(arguments).forEach(value => {\n        isUsable =\n            isUsable && typeof value === 'number' && Number.isFinite(value)\n    })\n    return isUsable\n}\n\n/**\n * Round at decimals\n * @private\n * @param {number} number - any number to round\n * @param {number} decimals - number of decimals to round at\n * @returns {number} the rounded number\n */\nconst roundAt = function(number, decimals) {\n    // https://www.jacklmoore.com/notes/rounding-in-javascript/\n    return Number(Math.round(number + 'e' + decimals) + 'e-' + decimals)\n}\n\n/**\n * Check for primitives\n * @private\n * @param {any} value - any value to check\n * @returns {boolean} is a primitive\n */\nconst isPrimitive = function(value) {\n    return (\n        typeof value === 'string' ||\n        typeof value === 'number' ||\n        typeof value === 'boolean'\n    )\n}\n\n/**\n * Check for the node being inside the DOM\n * @private\n * @param {Node} node\n * @returns {Boolean} true when the node is onscreen -- not removed\n */\nconst isAttachedToDom = function(elm) {\n    return (\n        elm &&\n        (elm.getRootNode() instanceof Document ||\n            elm.getRootNode() instanceof ShadowRoot)\n    )\n}\n\n/**\n * Transform a camelcase object-key to title\n * @private\n * @param {String} camel\n * @param {Object} options -\n      @param {Array} preserve - [keep1, keep2]\n      @param {Object} replace - {toReplace1: replacement1, toReplace2: replacement2}\n * @returns {String} title - sequence of capitalised words\n */\nconst camelCaseToTitle = function(camel, options = {}) {\n    if (!options.preserve) options.preserve = []\n    if (!options.replace) options.replace = {}\n    if (!options.seperator) options.seperator = ' '\n    // const isLetter = char => {\n    //     return char.toLowerCase() !== char.toUpperCase()\n    // }\n    const isCapital = char => {\n        return char === char.toUpperCase() && char !== char.toLowerCase()\n    }\n    const isSmall = char => {\n        return char === char.toLowerCase() && char !== char.toUpperCase()\n    }\n    const trimSeperator = line => {\n        const leading = new RegExp('^' + options.seperator)\n        const trailing = new RegExp(options.seperator + '$')\n        const doubling = new RegExp(options.seperator + options.seperator, 'g')\n        return line\n            .replace(leading, '')\n            .replace(trailing, '')\n            .replace(doubling, options.seperator)\n    }\n\n    /* Put seperator before each concatenated word\n     * @param {String} line\n     * @returns {String} phrase of seperated words\n     */\n    const seperateString = line => {\n        let phrase = line[0]\n        for (let i = 1; i < line.length; i++) {\n            if (isSmall(line[i - 1]) && isCapital(line[i]))\n                phrase += options.seperator\n            phrase += line[i]\n        }\n        return phrase\n    }\n\n    /* Apply options before placing seperators\n     * @param {String} line\n     * @returns {Array} sequence of words\n     */\n    const seperate = line => {\n        if (options.preserve.length) {\n            options.preserve.forEach(preserve => {\n                options.replace[preserve] = preserve\n            })\n        }\n\n        if (options.replace && JSON.stringify(options.replace) !== '{}') {\n            for (let [key, value] of Object.entries(options.replace)) {\n                line = line.replace(\n                    new RegExp(key, 'g'),\n                    options.seperator + value + options.seperator,\n                )\n                // recall strings to preserve\n                if (!options.preserve.includes(value))\n                    options.preserve.push(value)\n            }\n        }\n\n        line = trimSeperator(line)\n\n        let strings = line.trim().split(options.seperator)\n        strings = strings.map(str =>\n            options.preserve.includes(str) ? str : seperateString(str),\n        )\n\n        return strings.flat()\n    }\n\n    camel = camel.trim()\n    let words = seperate(camel)\n    let titleWords = words.map(word =>\n        options.preserve.includes(word)\n            ? word\n            : word.substr(0, 1).toUpperCase() + word.substr(1),\n    )\n    return titleWords.join(options.seperator)\n}\n\n/**\n * Check for existence of property in object\n * @private\n * @param {Object} object\n * @param {String} prop\n * @returns {Boolean} hasIt - object has that own property\n */\nconst hasOwnProperty = function(object, prop) {\n    const hasIt = Object.prototype.hasOwnProperty.call(object, prop)\n    return hasIt\n}\n\nexport {\n    isUsableNumber,\n    roundAt,\n    isPrimitive,\n    isAttachedToDom,\n    camelCaseToTitle,\n    hasOwnProperty,\n}\n","import { hasOwnProperty } from './functions'\n\nconst TargetPatch = function(patchData, parentNode, containerSize) {\n    this.name = 'TargetPatch'\n    this.element = document.createElement('targetPatch')\n\n    this.element.style.left = `${(patchData.location.x * 100) /\n        containerSize.x}%`\n    this.element.style.top = `${(patchData.location.y * 100) /\n        containerSize.y}%`\n    this.element.style.width = `${(patchData.location.w * 100) /\n        containerSize.x}%`\n    this.element.style.height = `${(patchData.location.h * 100) /\n        containerSize.y}%`\n    parentNode.appendChild(this.element)\n\n    let userData = {}\n    for (let [key, value] of Object.entries(patchData)) {\n        if (!(key === 'location')) {\n            userData[key] = value\n        }\n    }\n    this.element.dataset.picturaeTargetmapDisplay = JSON.stringify(userData)\n\n    if (userData.validity && hasOwnProperty(userData.validity, 'valid')) {\n        const isValid = userData.validity.valid\n        this.element.classList.add(isValid ? 'valid' : 'invalid')\n    }\n}\n\nexport { TargetPatch }\n","import { hasOwnProperty } from './functions'\nimport { TargetPatch } from '../src/targetPatch.js'\n\nconst TargetChart = function(chartData, parentNode, containerSize) {\n    this.name = 'TargetChart'\n    this.element = document.createElement('targetChart')\n\n    this.element.style.left = `${(chartData.location.x * 100) /\n        containerSize.x}%`\n    this.element.style.top = `${(chartData.location.y * 100) /\n        containerSize.y}%`\n    this.element.style.width = `${(chartData.location.w * 100) /\n        containerSize.x}%`\n    this.element.style.height = `${(chartData.location.h * 100) /\n        containerSize.y}%`\n    if (chartData.location.r) {\n        if (chartData.location.r === 180) {\n            this.element.style.transformOrigin = 'center center'\n            const rotate = `rotate(${chartData.location.r}deg)`\n            this.element.style.transform = rotate //+ ' ' + translate\n        }\n    }\n    parentNode.appendChild(this.element)\n\n    let userData = {}\n    for (let [key, value] of Object.entries(chartData)) {\n        if (\n            !(\n                key === 'location' ||\n                key === 'colorPatches' ||\n                key === 'edgePatches'\n            )\n        ) {\n            userData[key] = value\n        }\n    }\n    this.element.dataset.picturaeTargetmapDisplay = JSON.stringify(userData)\n\n    if (userData.validity && hasOwnProperty(userData.validity, 'valid')) {\n        const isValid = userData.validity.valid\n        this.element.classList.add(isValid ? 'valid' : 'invalid')\n    }\n\n    this.patches = []\n    const contentSize = {\n        x: chartData.location.w,\n        y: chartData.location.h,\n    }\n    if (chartData.colorPatches) {\n        chartData.colorPatches.forEach(patchData => {\n            patchData.patchType = 'color'\n            this.patches.push(\n                new TargetPatch(patchData, this.element, contentSize),\n            )\n        })\n    }\n    // if (chartData.edgePatches) {\n    //     chartData.edgePatches.forEach(patchData => {\n    //         patchData.patchType = 'edge'\n    //         this.patches.push(\n    //             new TargetPatch(patchData, this.element, contentSize),\n    //         )\n    //     })\n    // }\n}\n\nexport { TargetChart }\n","import {\n    camelCaseToTitle,\n    isAttachedToDom,\n    isPrimitive,\n    hasOwnProperty,\n} from './functions.js'\n\nconst DisplayTable = function(eventRoot) {\n    this.name = 'DisplayTable'\n    const root = document.body\n    const table = document.createElement('table')\n    this.element = table\n    table.className = 'picturae-targetmap-display'\n\n    const readableValue = value => {\n        if (value === null) {\n            return '--'\n        }\n        if (typeof value === 'boolean') {\n            let bool = `<targetBoolean class=\"${\n                value ? 'valid' : 'invalid'\n            }\"></targetBoolean>`\n            return bool\n        }\n        if (isPrimitive(value)) return value\n        if (value instanceof Array && value.length) {\n            if (isPrimitive(value[0])) return value.join(', ')\n            if (typeof value[0] === 'object') {\n                let fragment = ''\n                for (let i = 0; i < value.length; i++) {\n                    fragment += readableValue(value[i])\n                }\n                return fragment\n            }\n        }\n        if (typeof value === 'object' && !(value instanceof Array)) {\n            let fragment = ''\n            for (let [property, content] of Object.entries(value)) {\n                let line = ''\n                if (typeof content === 'boolean') {\n                    line = `${readableValue(content)} ${camelCaseToTitle(\n                        property,\n                    )}<br/>`\n                } else {\n                    line = `${camelCaseToTitle(property)}: ${readableValue(\n                        content,\n                    )}<br/>`\n                }\n                if (line) fragment += line\n            }\n            return fragment + ''\n        }\n    }\n\n    const dataBody = (groupName, groupData) => {\n        let body = `<tbody name=\"${groupName}\">`\n        for (let [key, value] of Object.entries(groupData)) {\n            let row = ''\n            row = `<tr><th>${camelCaseToTitle(key, {\n                replace: {\n                    deltaE: '&Delta;E',\n                    DeltaE: '&Delta;E',\n                    deltaL: '&Delta;L',\n                    DeltaL: '&Delta;L',\n                },\n            })}</th><td>${readableValue(value)}</td></tr>`\n            if (row) body += row\n        }\n        body += '</tbody>'\n        return body\n    }\n\n    const targetEnter = function(event) {\n        const targetData = event.target.dataset.picturaeTargetmapDisplay\n        if (targetData) {\n            table.innerHTML = ''\n            const userData = JSON.parse(targetData)\n            let colorSquare = ''\n            if (userData.patchType && userData.patchType === 'color') {\n                let color = `rgb(${userData.observed.RGB.join()})`\n                colorSquare = `<targetColor style=\"background: ${color};\"></targetColor>`\n            }\n            table.innerHTML += `<caption>\n                ${userData.name} ${colorSquare}\n            </caption>`\n\n            if (userData.assessed) {\n                table.innerHTML += dataBody('assessed', userData.assessed)\n            }\n            if (userData.observed) {\n                table.innerHTML += dataBody('observed', userData.observed)\n            }\n            if (userData.reference) {\n                table.innerHTML += dataBody('reference', userData.reference)\n            }\n            if (userData.validity) {\n                if (hasOwnProperty(userData.validity, 'valid')) {\n                    const isValid = userData.validity.valid\n                    table.classList.remove('valid', 'invalid')\n                    table.classList.add(isValid ? 'valid' : 'invalid')\n                }\n                table.innerHTML += dataBody('validity', userData.validity)\n            }\n\n            if (!isAttachedToDom(table)) root.appendChild(table)\n        }\n    }\n\n    const targetLeave = function() {\n        if (isAttachedToDom(table)) root.removeChild(table)\n    }\n\n    eventRoot.addEventListener('mouseover', function(event) {\n        const enter = event.target\n        if (\n            enter.tagName === 'TARGETMAP' ||\n            enter.tagName === 'TARGETCHART' ||\n            enter.tagName === 'TARGETPATCH'\n        ) {\n            targetEnter(event)\n        } else if (!table.contains(enter)) {\n            targetLeave(event)\n        }\n        event.stopPropagation()\n    })\n\n    eventRoot.addEventListener('mousemove', function(event) {\n        const offPointer = 16\n\n        if (event.clientX / root.clientWidth < 0.5) {\n            table.style.left = `${event.clientX + offPointer}px`\n            table.style.right = 'auto'\n        } else {\n            table.style.left = 'auto'\n            table.style.right = `${root.clientWidth -\n                event.clientX +\n                offPointer}px`\n        }\n\n        const ySpace = (root.clientHeight - table.clientHeight) / 2\n\n        if (event.clientY < ySpace - offPointer) {\n            table.style.top = `${event.clientY + offPointer}px`\n            table.style.bottom = 'auto'\n        } else if (event.clientY < ySpace + offPointer + table.clientHeight) {\n            table.style.top = `${ySpace}px`\n            table.style.bottom = 'auto'\n        } else {\n            table.style.top = 'auto'\n            table.style.bottom = `${root.clientHeight -\n                event.clientY +\n                offPointer}px`\n        }\n        event.stopPropagation()\n    })\n}\n\nexport { DisplayTable }\n","import { isUsableNumber, hasOwnProperty, roundAt } from './functions'\nimport { TargetChart } from './targetChart'\nimport { DisplayTable } from './displayTable'\n\nconst TargetMap = function(viewer) {\n    this.name = 'TargetMap'\n    this.element = document.createElement('targetmap')\n\n    viewer.canvas.appendChild(this.element)\n\n    this.resize = () => {\n        this.tiledImage = viewer.world.getItemAt(0)\n        if (!this.tiledImage) return\n        const imageBounds = this.tiledImage.getBounds()\n\n        const leftTop = viewer.viewport.pixelFromPoint(imageBounds.getTopLeft())\n        const rightBottom = viewer.viewport.pixelFromPoint(\n            imageBounds.getBottomRight(),\n        )\n\n        if (!isUsableNumber(leftTop.x, leftTop.y, rightBottom.x, rightBottom.y))\n            return\n\n        const precision = 4\n        const box = {\n            left: roundAt(leftTop.x, precision),\n            top: roundAt(leftTop.y, precision),\n            width: roundAt(rightBottom.x - leftTop.x, precision),\n            height: roundAt(rightBottom.y - leftTop.y, precision),\n        }\n\n        this.element.style.left = `${box.left}px`\n        this.element.style.top = `${box.top}px`\n        this.element.style.width = `${box.width}px`\n        this.element.style.height = `${box.height}px`\n    }\n\n    viewer.addHandler('animation', () => {\n        this.resize()\n    })\n    viewer.addHandler('open', () => {\n        this.resize()\n    })\n    viewer.addHandler('rotate', () => {\n        this.resize()\n    })\n    viewer.addHandler('resize', () => {\n        this.resize()\n    })\n\n    this.resize()\n\n    this.charts = []\n    this.render = json => {\n        this.element.innerHTML = ''\n        if (!json.name) json.name = 'Target Scan'\n\n        let userData = {}\n        for (let [key, value] of Object.entries(json)) {\n            if (!(key === 'targets')) {\n                userData[key] = value\n            }\n        }\n        this.element.dataset.picturaeTargetmapDisplay = JSON.stringify(userData)\n\n        if (userData.validity && hasOwnProperty(userData.validity, 'valid')) {\n            const isValid = userData.validity.valid\n            this.element.classList.add(isValid ? 'valid' : 'invalid')\n        }\n\n        json.targets.forEach(chartData => {\n            this.charts.push(\n                new TargetChart(\n                    chartData,\n                    this.element,\n                    this.tiledImage.getContentSize(),\n                ),\n            )\n        })\n    }\n    new DisplayTable(document.body)\n}\n\nexport { TargetMap }\n","import { TargetMap } from './targetMap'\nimport './main.scss'\n\nvar index = (function() {\n    var $ = window.OpenSeadragon\n\n    if (!$) {\n        $ = require('openseadragon')\n        if (!$) {\n            throw new Error('OpenSeadragon is missing.')\n        }\n    }\n\n    $.Viewer.prototype.targetMap = function() {\n        if (!this._targetMap) {\n            this._targetMap = new TargetMap(this)\n        }\n\n        return this._targetMap\n    }\n})()\n\nexport default index\n"],"names":["roundAt","number","decimals","Number","Math","round","isPrimitive","value","isAttachedToDom","elm","getRootNode","Document","ShadowRoot","camelCaseToTitle","camel","options","preserve","replace","seperator","isCapital","char","toUpperCase","toLowerCase","line","length","forEach","JSON","stringify","key","Object","entries","RegExp","includes","push","strings","leading","trailing","doubling","trimSeperator","trim","split","map","str","phrase","i","seperateString","flat","seperate","word","substr","join","hasOwnProperty","object","prop","prototype","call","TargetPatch","patchData","parentNode","containerSize","this","name","element","document","createElement","style","left","location","x","top","y","width","w","height","h","appendChild","userData","dataset","picturaeTargetmapDisplay","validity","isValid","valid","classList","add","TargetChart","chartData","r","transformOrigin","rotate","transform","patches","contentSize","colorPatches","patchType","DisplayTable","eventRoot","root","body","table","className","readableValue","Array","fragment","property","content","dataBody","groupName","groupData","row","deltaE","DeltaE","deltaL","DeltaL","addEventListener","event","enter","target","tagName","targetData","innerHTML","parse","colorSquare","observed","RGB","assessed","reference","remove","targetEnter","contains","removeChild","stopPropagation","clientX","clientWidth","right","ySpace","clientHeight","clientY","bottom","TargetMap","viewer","canvas","resize","tiledImage","world","getItemAt","imageBounds","getBounds","leftTop","viewport","pixelFromPoint","getTopLeft","rightBottom","getBottomRight","isUsable","Boolean","arguments","from","isFinite","isUsableNumber","box","addHandler","charts","render","json","targets","getContentSize","index","$","window","OpenSeadragon","require","Error","Viewer","targetMap","_targetMap"],"mappings":"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"}